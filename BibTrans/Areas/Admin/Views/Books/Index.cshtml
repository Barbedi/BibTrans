@model IEnumerable<BibTrans.Models.Books>

@{
    ViewData["Title"] = "Książki";
}

<link rel="stylesheet" href="~/css/Views/Admin/Books.css" />

<div class="left-container panel-bg">
    <form class="panel-bg container add-book-form" asp-action="Create" method="post">
        <h6>Dodaj książkę</h6>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label for="Title" class="control-label">Tytuł</label>
            <input name="Title" class="form-control" />
        </div>
        <div class="form-group">
            <label for="Autor" class="control-label">Autor</label>
            <input name="Autor" class="form-control" />
        </div>
        <div class="form-group">
            <label for="ISBN" class="control-label">ISBN</label>
            <input name="ISBN" class="form-control" />
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input type="checkbox" class="form-check-input" name="IsAvailable" value="false" onchange="this.value=this.checked" /> @Html.DisplayNameFor(model => model.IsAvailable)
            </label>
        </div>
        <div class="form-group">
            <label for="Description" class="control-label">Opis</label>
            <textarea name="Description" class="form-control"></textarea>
        </div>
        <div class="form-group">
            <input type="submit" value="Utwórz" class="btn btn-primary" />
        </div>
    </form>
</div>
<div class="right-container panel-bg">
    <header>
        <h6>Lista książek</h6>
        <div>
            <p>@Html.DisplayNameFor(model => model.Title)</p>
            <p>@Html.DisplayNameFor(model => model.Autor)</p>
            <p>@Html.DisplayNameFor(model => model.ISBN)</p>
            <p>@Html.DisplayNameFor(model => model.IsAvailable)</p>
        </div>
    </header>
    <div class="books-list-container">
        @if (Model.Count() == 0)
        {
            <p class="no-data">Brak książek</p>
        }
        @foreach(var item in Model)
        {
            <div class="book">
                <div class="book-info" data-bookid="@Html.ValueFor(modelItem => item.Id)">
                    <p>@Html.DisplayFor(modelItem => item.Title)</p>
                    <p>@Html.DisplayFor(modelItem => item.Autor)</p>
                    <p>@Html.DisplayFor(modelItem => item.ISBN)</p>
                    <p>@Html.DisplayFor(modelItem => item.IsAvailable)</p>
                </div>
                <div class="book-details hidden">
                    <div>
                        <p>@Html.DisplayFor(modelItem => item.Description)</p>
                        <span class="icon" data-bookid="@Html.ValueFor(modelItem => item.Id)">^</span>
                    </div>
                    <div class="book-actions">
                        <a asp-action="Edit" asp-route-id="@item.Id">Edytuj</a>
                        <a asp-action="Details" asp-route-id="@item.Id">Szczegóły</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Usuń</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/Views/Admin/book.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}